# Generated by Django 5.2 on 2025-06-18 09:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the common name of the edible produce. Example: Maize, Beef, Salmon, Rabbit.', max_length=100, unique=True)),
                ('category', models.CharField(choices=[('cash_crop', 'Cash Crop'), ('cereal', 'Cereal'), ('fruit', 'Fruit'), ('vegetable', 'Vegetable'), ('tuber', 'Tuber'), ('legume', 'Legume'), ('nut', 'Nut'), ('spice', 'Spice'), ('herb', 'Herb'), ('oil_seed', 'Oil Seed'), ('aquatic_plant', 'Aquatic Plant'), ('livestock', 'Livestock'), ('poultry', 'Poultry'), ('rabbit', 'Rabbit'), ('guinea_pig', 'Guinea Pig'), ('dairy', 'Dairy'), ('egg_producer', 'Egg Producer'), ('fish', 'Fish'), ('shellfish', 'Shellfish'), ('mollusk', 'Mollusk'), ('game', 'Game'), ('edible_insect', 'Edible Insect'), ('edible_fungus', 'Edible Fungus'), ('other', 'Other')], help_text='Select the type of edible produce from the list.', max_length=50)),
                ('description', models.TextField(blank=True, help_text='Describe the edible produce, e.g., nutritional value, culinary uses, or production methods.')),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FarmProduce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variety', models.CharField(help_text='Variety name (e.g., NARO beans, Hybrid maize).', max_length=100)),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Amount available (e.g., 50 kg or 2 bags).', max_digits=10)),
                ('unit', models.CharField(choices=[('kg', 'Kilograms'), ('bag', 'Bags (50kg)'), ('bunch', 'Bunches'), ('piece', 'Pieces')], default='kg', max_length=10)),
                ('quality', models.CharField(choices=[('top', 'Top Quality (Fresh, No Damage)'), ('standard', 'Standard (Minor Defects)'), ('fair', 'Fair (Some Damage, Cheaper)')], help_text='Select the quality grade.', max_length=10)),
                ('price', models.DecimalField(decimal_places=0, help_text='Price in Ugandan Shillings (per kg/bag/bunch).', max_digits=10)),
                ('available_from', models.DateField(help_text='When will the produce be ready?')),
                ('photo', models.ImageField(help_text='Take a clear photo with your phone.', upload_to='produce_photos/')),
                ('description', models.TextField(blank=True, help_text='Extra details (e.g., organic, storage method).')),
                ('location_lat', models.FloatField(blank=True, null=True, verbose_name='Farm Location (Latitude)')),
                ('location_lng', models.FloatField(blank=True, null=True, verbose_name='Farm Location (Longitude)')),
                ('google_maps_link', models.URLField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=True, help_text='Is this produce still for sale?')),
                ('listed_at', models.DateTimeField(auto_now_add=True)),
                ('crop', models.ForeignKey(help_text='Type of crop (e.g., maize, beans).', on_delete=django.db.models.deletion.CASCADE, to='produce.crop')),
                ('farmer', models.ForeignKey(help_text='Your account (auto-selected).', limit_choices_to={'role': 'farmer'}, on_delete=django.db.models.deletion.CASCADE, related_name='listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Crop Listing',
                'verbose_name_plural': 'Crop Listings',
                'ordering': ['-listed_at'],
            },
        ),
    ]
