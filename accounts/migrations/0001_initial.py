# Generated by Django 5.2 on 2025-06-18 09:02

import accounts.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FarmerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_size', models.DecimalField(decimal_places=2, max_digits=10)),
                ('farm_size_unit', models.CharField(choices=[('acres', 'Acres'), ('hectares', 'Hectares'), ('sqm', 'Square Meters')], default='acres', max_length=10)),
                ('expected_harvest_date', models.DateField(blank=True, null=True)),
                ('id_card_number', models.CharField(blank=True, max_length=50)),
                ('certification', models.CharField(blank=True, max_length=100)),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'farmer profile',
                'verbose_name_plural': 'farmer profiles',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('role', models.CharField(choices=[('admin', 'System Administrator'), ('farmer', 'Farmer'), ('buyer', 'Buyer'), ('logistics', 'Logistics Partner'), ('finance', 'Financial Institution'), ('guest', 'Guest User')], default='guest', max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')])),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('sw', 'Swahili')], default='en', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'permissions': [('can_manage_users', 'Can manage all users'), ('can_verify_users', 'Can verify user accounts')],
            },
            managers=[
                ('objects', accounts.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BuyerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=100)),
                ('registration_number', models.CharField(blank=True, max_length=100)),
                ('company_type', models.CharField(choices=[('factory', 'Factory'), ('wholesaler', 'Wholesaler'), ('supermarket', 'Supermarket'), ('processor', 'Food Processor'), ('individual', 'Individual'), ('exporter', 'Exporter'), ('restaurant', 'Restaurant/Hotel')], max_length=50)),
                ('preferred_products', models.JSONField(default=list)),
                ('delivery_address', models.TextField()),
                ('additional_addresses', models.JSONField(blank=True, default=list)),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')])),
                ('tax_identification', models.CharField(blank=True, max_length=50)),
                ('preferred_communication', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('whatsapp', 'WhatsApp')], default='email', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'buyer profile',
                'verbose_name_plural': 'buyer profiles',
            },
        ),
    ]
